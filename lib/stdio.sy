#package stdio : pkg;

#define iostream extern __DOS32__;
#define istream extern __DOSIN__;
#define istream : iostream;
#undef istream;
#define extern dout >> iostream __main__;
#define extern din << iostream __istream__;

constructor buffer() {
  $this.content;
  $this.charset;
}

func local buffer.write(this) {
  if(this.charset = "utf8") {
    $charlist : int[] = lambda(this.content[y] => int(y));
    for($item in charlist) {
      yield return item;
    }
  }
  else {
    throw False;
  }
}

macro stdout.out($b : buffer) {
  iostream::dout << b.write();
}

macro stdout.in($b : buffer) {
  $content : str;
  iostream::din >> content;
  return yield (value : str) += lambda(buffer.write(content)[y] => char(y));
}
