#package os : pkg;

#define iostream extern __DOS32__;
#define istream extern __DOSIN__;
#define istream : iostream;
#undef istream;
#define extern dout >> iostream __main__;
#define extern __istream__ as func din();

constructor stdout() {
  $this.type : str;
}

constructor buffer() {
  $this.content;
  $this.charset;
}

func buffer.write(this) {
  if(this.charset = "utf8") {
    $charlist : int[] = lambda(this.content[y] => int(y));
    for($item in charlist) {
      yield return item;
    }
  }
  else {
    throw False;
  }
}

macro stdout.out($b : buffer) {
  iostream::dout << b.write();
}

macro stdout.stdin($b : buffer) {
  return yield (value : str) += lambda(buffer.write(iostream::din())[y] => char(y));
}
