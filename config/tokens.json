{
  "STRING_LITERAL": "\"(?:[^\"\\\\']|\\\\.)*\"",
  "CHAR_LITERAL": "'(?:[^\"\\\\']|\\\\.)*'",
  "COMPLEX_LITERAL": "\\b\\d+(\\.\\d+)?i\\b",
  "FLOAT_LITERAL": "\\d+\\.\\d+",
  "#": "\\#",
  "??": "\\?\\?",
  "?": "\\?",
  "===": "===",
  "!==": "!==",
  ".": "\\.",
  "DOLLAR": "\\$",
  ":": "\\:",
  ",": ",",
  "<<": "<<",
  ">>>": ">>>",
  ">>": ">>",
  "!=": "!=",
  "!": "!",
  "+=": "\\+=",
  "-=": "-=",
  "*=": "\\*=",
  "/=": "/=",
  "%=": "%=",
  "^=": "\\^=",
  "AND": "&&",
  "OR": "\\|\\|",
  "XOR": "\\^\\^",
  "+": "\\+",
  "-": "-",
  "*": "\\*",
  "/": "/",
  "^": "\\^",
  "%": "%",
  "==": "==",
  ">=": ">=",
  "<=": "<=",
  "=>": "=>",
  "=": "=",
  ";": ";",
  "(": "\\(",
  ")": "\\)",
  "{": "\\{",
  "}": "\\}",
  "[": "\\[",
  "]": "\\]",
  ">": ">",
  "<": "<",
  "AMP": "&",
  "@": "@",
  "~": "~",
  "INT_TYPE": "\\bint\\b",
  "IF": "\\bif\\b",
  "ELSE": "\\belse\\b",
  "STRING_TYPE": "\\bstr\\b",
  "FLOAT_TYPE": "\\bfloat\\b",
  "FUNC": "\\bfunc\\b",
  "RETURN": "\\breturn\\b",
  "NULL": "\\bnull\\b",
  "EXTERN": "\\bextern\\b",
  "YIELD": "\\byield\\b",
  "CHAR_TYPE": "\\bchar\\b",
  "MODULE": "\\bmodule\\b",
  "BOOL_TYPE": "\\bbool\\b",
  "LIST_TYPE": "\\blist\\b",
  "DICT_TYPE": "\\bdict\\b",
  "THIS": "\\bthis\\b",
  "NEW": "\\bnew\\b",
  "EXCEPT": "\\bexcept\\b",
  "THROW": "\\bthrow\\b",
  "DO": "\\bdo\\b",
  "FOR": "\\bfor\\b",
  "WITH": "\\bwith\\b",
  "AWAIT": "\\bawait\\b",
  "ASYNC" :"\\basync\\b",
  "DEFAULT": "\\bdefault\\b",
  "BREAK": "\\bbreak\\b",
  "CONTINUE": "\\bcontinue\\b",
  "CONSTRUCTOR": "\\bconstructor\\b",
  "VALUE": "\\bvalue\\b",
  "PRIVATE": "\\bprivate\\b",
  "PROTECTED": "\\bprotected\\b",
  "STRUCT": "\\bstruct\\b",
  "INTERFACE": "\\binterface\\b",
  "TYPE": "\\btype\\b",
  "FINAL": "\\bfinal\\b",
  "VOLATILE": "\\bvolatile\\b",
  "SELECT": "\\bselect\\b",
  "CASE": "\\bcase\\b",
  "ABSTRACT": "\\babstract\\b",
  "PARTIAL": "\\bpartial\\b",
  "PROPERTY": "\\bproperty\\b",
  "SEALED": "\\bsealed\\b",
  "INCLUDE": "\\binclude\\b",
  "BYTE_TYPE": "\\bbyte\\b",
  "COMPLEX_TYPE": "\\bcomplex\\b",
  "USE": "\\buse\\b",
  "LONG_TYPE": "\\blong\\b",
  "OBJECT_TYPE": "\\bobject\\b",
  "ARRAY_TYPE": "\\barray\\b",
  "MATCH": "\\bmatch\\b",
  "UNSAFE": "\\bunsafe\\b",
  "BOOL_LITERAL": "(?i)\\btrue\\b|\\bfalse\\b",
  "HEX_LITERAL": "0x[0-9A-F]+",
  "BINARY_LITERAL": "0b[10]+",
  "IDENTIFIER": "[^\\d\\W]\\w*",
  "INTEGER_LITERAL": "\\d+"
}
